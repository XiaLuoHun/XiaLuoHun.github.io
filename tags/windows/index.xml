<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
  <channel>
    <title>Windows - 标签   夏洛魂的个人博客</title>
    <link>https://XiaLuoHun.top/tags/windows/</link>
    <description>Windows - 标签 | 夏洛魂的个人博客</description>
    <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 08 May 2023 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://XiaLuoHun.top/tags/windows/" rel="self" type="application/rss+xml" /><item>
  <title>.NET程序hook的另一种优雅实现-C&#43;&#43;/CLI</title>
  <link>https://XiaLuoHun.top/posts/windows%E7%9B%B8%E5%85%B3/net%E7%A8%8B%E5%BA%8Fhook%E7%9A%84%E5%8F%A6%E4%B8%80%E7%A7%8D%E4%BC%98%E9%9B%85%E5%AE%9E%E7%8E%B0/</link>
  <pubDate>Mon, 08 May 2023 00:00:00 &#43;0000</pubDate>
  <author>夏洛魂</author>
  <guid>https://XiaLuoHun.top/posts/windows%E7%9B%B8%E5%85%B3/net%E7%A8%8B%E5%BA%8Fhook%E7%9A%84%E5%8F%A6%E4%B8%80%E7%A7%8D%E4%BC%98%E9%9B%85%E5%AE%9E%E7%8E%B0/</guid>
  <description><![CDATA[<div class="featured-image"><img loading="eager" src="https://XiaLuoHun.top/posts/windows%E7%9B%B8%E5%85%B3/net%E7%A8%8B%E5%BA%8Fhook%E7%9A%84%E5%8F%A6%E4%B8%80%E7%A7%8D%E4%BC%98%E9%9B%85%E5%AE%9E%E7%8E%B0/images/Hook%E7%BB%93%E6%9E%9C.png" alt=".NET程序hook的另一种优雅实现-C&#43;&#43;/CLI" title=".NET程序hook的另一种优雅实现-C&#43;&#43;/CLI" referrerpolicy="no-referrer"/></div>概述 在正式开始之前,我们需要先了解以下几个概念: CLI(Common Language Infrastructure,通用语言框架):提供了一套可执行代码和它所运行需要的虚拟执]]></description>
</item>
<item>
  <title>DEFCON议题解读｜Dll劫持新思路——修改环境变量</title>
  <link>https://XiaLuoHun.top/posts/windows%E7%9B%B8%E5%85%B3/dll%E5%8A%AB%E6%8C%81%E6%96%B0%E6%80%9D%E8%B7%AF-%E4%BF%AE%E6%94%B9%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</link>
  <pubDate>Wed, 24 Aug 2022 00:00:00 &#43;0000</pubDate>
  <author>夏洛魂</author>
  <guid>https://XiaLuoHun.top/posts/windows%E7%9B%B8%E5%85%B3/dll%E5%8A%AB%E6%8C%81%E6%96%B0%E6%80%9D%E8%B7%AF-%E4%BF%AE%E6%94%B9%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</guid>
  <description><![CDATA[<div class="featured-image"><img loading="eager" src="https://XiaLuoHun.top/posts/windows%E7%9B%B8%E5%85%B3/dll%E5%8A%AB%E6%8C%81%E6%96%B0%E6%80%9D%E8%B7%AF-%E4%BF%AE%E6%94%B9%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/images/%E6%93%8D%E4%BD%9C%E6%B5%81%E7%A8%8B.png" alt="DEFCON议题解读｜Dll劫持新思路——修改环境变量" title="DEFCON议题解读｜Dll劫持新思路——修改环境变量" referrerpolicy="no-referrer"/></div>简介 在2022年的Defcon大会上,安全研究人员Wietze Beukema通过对进程级环境变量的研究,提出了一种Dll劫持新思路,下面就其]]></description>
</item>
<item>
  <title>Windows进程注入技术</title>
  <link>https://XiaLuoHun.top/posts/windows%E7%9B%B8%E5%85%B3/windows%E8%BF%9B%E7%A8%8B%E6%B3%A8%E5%85%A5%E6%8A%80%E6%9C%AF/</link>
  <pubDate>Thu, 24 Mar 2022 00:00:00 &#43;0000</pubDate>
  <author>夏洛魂</author>
  <guid>https://XiaLuoHun.top/posts/windows%E7%9B%B8%E5%85%B3/windows%E8%BF%9B%E7%A8%8B%E6%B3%A8%E5%85%A5%E6%8A%80%E6%9C%AF/</guid>
  <description><![CDATA[<div class="featured-image"><img loading="eager" src="https://XiaLuoHun.top/posts/windows%E7%9B%B8%E5%85%B3/windows%E8%BF%9B%E7%A8%8B%E6%B3%A8%E5%85%A5%E6%8A%80%E6%9C%AF/images/%E6%B3%A8%E5%86%8C%E8%A1%A8%E4%B9%8BAppInit_DLLs.png" alt="Windows进程注入技术" title="Windows进程注入技术" referrerpolicy="no-referrer"/></div>注册表 AppInit_DLLs HKEY_LOCAL_MACHINE\SOFTWARE\WOW6432Node\Microsoft\Windows NT\CurrentVersion\Windows\AppInit_DLLs HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Windows\AppInit_DLLs 当User32.dll被映射到一个新的进程时,会收到DLL_PROCESS_ATTACH通知,当User32.dll对它进行]]></description>
</item>
<item>
  <title>x64逆向</title>
  <link>https://XiaLuoHun.top/posts/windows%E7%9B%B8%E5%85%B3/x64%E9%80%86%E5%90%91/</link>
  <pubDate>Tue, 15 Feb 2022 00:00:00 &#43;0000</pubDate>
  <author>夏洛魂</author>
  <guid>https://XiaLuoHun.top/posts/windows%E7%9B%B8%E5%85%B3/x64%E9%80%86%E5%90%91/</guid>
  <description><![CDATA[<div class="featured-image"><img loading="eager" src="https://XiaLuoHun.top/posts/windows%E7%9B%B8%E5%85%B3/x64%E9%80%86%E5%90%91/images/%E5%BC%82%E5%B8%B8/%E5%AE%9A%E4%BD%8DCatch%E4%BB%A3%E7%A0%81%E5%9D%975.png" alt="x64逆向" title="x64逆向" referrerpolicy="no-referrer"/></div>寄存器 函数调用约定 四寄存器fast-call调用约定,调用方平栈,一般是函数开头申请栈空间,函数结尾平栈. 整型参数: 前4个参数传入指定的寄存]]></description>
</item>
<item>
  <title>x86逆向</title>
  <link>https://XiaLuoHun.top/posts/windows%E7%9B%B8%E5%85%B3/x86%E9%80%86%E5%90%91/</link>
  <pubDate>Mon, 14 Feb 2022 00:00:00 &#43;0000</pubDate>
  <author>夏洛魂</author>
  <guid>https://XiaLuoHun.top/posts/windows%E7%9B%B8%E5%85%B3/x86%E9%80%86%E5%90%91/</guid>
  <description><![CDATA[<div class="featured-image"><img loading="eager" src="https://XiaLuoHun.top/posts/windows%E7%9B%B8%E5%85%B3/x86%E9%80%86%E5%90%91/images/%E5%BC%82%E5%B8%B8/%E5%BC%82%E5%B8%B8%E4%BF%A1%E6%81%AF%E5%85%B3%E7%B3%BB%E8%A1%A8.png" alt="x86逆向" title="x86逆向" referrerpolicy="no-referrer"/></div>除法 约定 两个无符号相除,结果仍然是无符号. 两个有符号相除,结果是有符号. 有符号数和无符号数混除,结果是无符号的. 基本概念 在C语言和其他多数高]]></description>
</item>
</channel>
</rss>

<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LLVM - 合集   夏洛魂的个人博客</title>
    <link>https://XiaLuoHun.top/collections/llvm/</link>
    <description>个人笔记本</description>
    <generator>Hugo 0.133.1 &amp; FixIt v0.3.11</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 14 May 2023 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://XiaLuoHun.top/collections/llvm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>移植OLLVM到NDK中</title>
      <link>https://XiaLuoHun.top/posts/llvm/%E7%A7%BB%E6%A4%8Dollvm%E5%88%B0ndk%E4%B8%AD/</link>
      <pubDate>Sun, 14 May 2023 00:00:00 +0000</pubDate>
      <guid>https://XiaLuoHun.top/posts/llvm/%E7%A7%BB%E6%A4%8Dollvm%E5%88%B0ndk%E4%B8%AD/</guid>
      <category domain="https://XiaLuoHun.top/categories/llvm/">LLVM</category>
      <description>将OLLVM移植到LLVM源码中 LLVM源码编译 NDK下载 https://developer.android.google.cn/ndk/downloads?hl=zh-cn 这里需要注意一点的是下载的NDK版本要和上述移植的LLVM源码版本相近. 在NDK</description>
    </item>
    <item>
      <title>OLLVM研究之BCF</title>
      <link>https://XiaLuoHun.top/posts/llvm/ollvm%E7%A0%94%E7%A9%B6%E4%B9%8Bbcf/</link>
      <pubDate>Wed, 19 Apr 2023 00:00:00 +0000</pubDate>
      <guid>https://XiaLuoHun.top/posts/llvm/ollvm%E7%A0%94%E7%A9%B6%E4%B9%8Bbcf/</guid>
      <category domain="https://XiaLuoHun.top/categories/llvm/">LLVM</category>
      <description>概述 BCF即虚假控制流,将原程序基本块进行拆分和克隆,利用不透明谓词将克隆的基本块作为不可达分支用来混淆静态代码,达到迷惑攻击者的目的. 这里</description>
    </item>
    <item>
      <title>OLLVM研究之FLA</title>
      <link>https://XiaLuoHun.top/posts/llvm/ollvm%E7%A0%94%E7%A9%B6%E4%B9%8Bfla/</link>
      <pubDate>Mon, 17 Apr 2023 00:00:00 +0000</pubDate>
      <guid>https://XiaLuoHun.top/posts/llvm/ollvm%E7%A0%94%E7%A9%B6%E4%B9%8Bfla/</guid>
      <category domain="https://XiaLuoHun.top/categories/llvm/">LLVM</category>
      <description>概述 FLA即控制流平坦化,首先将原程序中switch结构转换成链式的平坦结构,然后创建loopEntry和loopEnd两个基本块来分发调度</description>
    </item>
    <item>
      <title>OLLVM调试</title>
      <link>https://XiaLuoHun.top/posts/llvm/ollvm%E8%B0%83%E8%AF%95/</link>
      <pubDate>Thu, 13 Apr 2023 00:00:00 +0000</pubDate>
      <guid>https://XiaLuoHun.top/posts/llvm/ollvm%E8%B0%83%E8%AF%95/</guid>
      <category domain="https://XiaLuoHun.top/categories/llvm/">LLVM</category>
      <description>调试流程 准备一份测试代码. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 //luoTst.c #include &amp;lt;stdlib.h&amp;gt; #include &amp;lt;stdio.h&amp;gt; //int fun1(int a, int b) __attribute((__annotate__((&amp;#34;fla&amp;#34;)))); //int fun2(int a, int b) __attribute((__annotate__((&amp;#34;nofla&amp;#34;)))); //int main(int argc, char** argv) __attribute((__annotate__((&amp;#34;bcf&amp;#34;)))); int</description>
    </item>
    <item>
      <title>OLLVM移植和使用</title>
      <link>https://XiaLuoHun.top/posts/llvm/ollvm%E7%A7%BB%E6%A4%8D%E5%92%8C%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Tue, 21 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://XiaLuoHun.top/posts/llvm/ollvm%E7%A7%BB%E6%A4%8D%E5%92%8C%E4%BD%BF%E7%94%A8/</guid>
      <category domain="https://XiaLuoHun.top/categories/llvm/">LLVM</category>
      <description>ollvm是一个基于llvm的开源项目,利用llvm会生成IR中间代码并通过pass进行优化的特点,通过增加Pass来对代码进行优化.但这种</description>
    </item>
    <item>
      <title>LLVM基础</title>
      <link>https://XiaLuoHun.top/posts/llvm/llvm%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Wed, 15 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://XiaLuoHun.top/posts/llvm/llvm%E5%9F%BA%E7%A1%80/</guid>
      <category domain="https://XiaLuoHun.top/categories/llvm/">LLVM</category>
      <description>对于llvm这样的编译框架来说,IR很重要,连接着编译器的前端和后端.实际上我们在llvm中编写的各种pass都是作用在llvm IR上的,因</description>
    </item>
    <item>
      <title>函数名称加密Pass开发</title>
      <link>https://XiaLuoHun.top/posts/llvm/%E5%87%BD%E6%95%B0%E5%90%8D%E7%A7%B0%E5%8A%A0%E5%AF%86pass%E5%BC%80%E5%8F%91/</link>
      <pubDate>Wed, 15 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://XiaLuoHun.top/posts/llvm/%E5%87%BD%E6%95%B0%E5%90%8D%E7%A7%B0%E5%8A%A0%E5%AF%86pass%E5%BC%80%E5%8F%91/</guid>
      <category domain="https://XiaLuoHun.top/categories/llvm/">LLVM</category>
      <description>测试代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 //luoTst.c #include &amp;lt;stdio.h&amp;gt; void fun1() { printf(&amp;#34;hello clang: fun1\r\n&amp;#34;); } void fun2() { printf(&amp;#34;hello clang: fun2\r\n&amp;#34;); } int main(int argc, char const *argv[]) { if (argc &amp;gt; 2) { printf(&amp;#34;hello world!\r\n&amp;#34;); } else { printf(&amp;#34;hello LuoHun!\r\n&amp;#34;); } fun1(); fun2(); return 0; } 基于</description>
    </item>
    <item>
      <title>初识LLVM</title>
      <link>https://XiaLuoHun.top/posts/llvm/%E5%88%9D%E8%AF%86llvm/</link>
      <pubDate>Mon, 13 Mar 2023 00:00:00 +0000</pubDate>
      <guid>https://XiaLuoHun.top/posts/llvm/%E5%88%9D%E8%AF%86llvm/</guid>
      <category domain="https://XiaLuoHun.top/categories/llvm/">LLVM</category>
      <description>llvm的官网：https://llvm.org/ 下面展示下用Ubuntu20.04来编译llvm9.0.1 源码编译 准备编译环境 1 2 sudo apt update sudo</description>
    </item>
  </channel>
</rss>
